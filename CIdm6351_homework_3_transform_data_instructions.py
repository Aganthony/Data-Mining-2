# -*- coding: utf-8 -*-
"""Amarachi Anthony - CIDM6351 Homework 3 Transform Data instructions

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZZt7V6GMt8NVxt94vixpFnoYi7Rhyb0R

# CIDM6351 Homework 3 Transform Data instructions  

In this homework, you will apply transformation operations on various datasets and answer some questions about the data.

TASK:   
1. Copy and save a copy of this Google Colab notebook
2. Change the Share's General Access to "Anyone with a link" so that the professor can see your code
3. When done, deliver the URL of your notebook to \\WTclass\cidm6351\lessons\Week 9\Turn in Homework 3\

Purpose: After loading and cleaning data, the next operation usually required by data engineers is to transform the data. Transform means to change the dataset, e.g., create new columns or group by rows.

# Name: AMARACHI ANTHONY
# Homework 3: Transform Data
# Cousrse: CIDM6351

## Analyze the Bike Rental Market in Seoul Korea.
The city has a bike rental option to aid public transport. Load, clean, transform the data to perform a useful analysis. <br>
<img src="https://upload.wikimedia.org/wikipedia/commons/9/97/North_Korea_Bike_Tour_%2814115456159%29.jpg" height="100px" alt="bikes"><br>

Photo: Uri Tours (uritours.com), CC BY-SA 2.0 <https://creativecommons.org/licenses/by-sa/2.0>, via Wikimedia Commons.

The original author and source of the data is found here: <https://www.kaggle.com/datasets/willianoliveiragibin/bike-seoul-sharing/?select=SeoulBikeData.csv>

## Task 1: Load the data

Import the Seoul Korea Bike data into a pandas dataframe. The URL to the raw data on github is already provided for you in the code below. Inspect the data with .head and .info.

Data dictionary:  
Rented bike count is the number of bikes rented. <br>
Date is the day of the rental. Notice the date format is day, month, year DD/MM/YYYY.  <br>
Hour is the hour of the day in 24-hour military time, e.g. 12 is noon and 23 hours is 11pm.  <br>
Temperature is the ambient temperature in Celsius.  <br>
To see the other columns, visit the kaggle.com website click the Column's tab to see a list of the columns and their unit of measure.
"""

# put your code here
import pandas  as pd
seoul_bike_data_url = 'https://raw.githubusercontent.com/sean-humpherys/randomfilestorage/main/seoulbikedata.csv'

# Load the data into a Pandas DataFrame
df = pd.read_csv(seoul_bike_data_url)

#Inspect the data with .head and .info.
df.head()

"""## Task 2: Transform Columns

Transform your data by removing unneeded columns. Remove all columns except Date, Rented Bike Count, Hour, Temperature(C). Rename Temperature(C) to just Temperature.
"""

# put your code here
# Removing unneeded columns and keeping "Date", "Rented Bike Count", "Hour", "Temperature(C)"
needed_columns = ['Date', 'Rented Bike Count', 'Hour', 'Temperature(C)']
df = df[needed_columns]

#renameing 'Temperature(C)' to 'Temperature'
df.rename(columns={'Temperature(C)': 'Temperature'}, inplace=True)

# Show the Top 5 rows of transformed DataFrame
print(df.head())

"""## Task 3: Scatterplot

We want to answer "What happens to the rented bike count as the temperature change?" Create a simple scatterplot between rented bike count and temperature. Label your axis.
"""

# put your code here
import matplotlib.pyplot as plt
# Create a scatter plot
plt.scatter(df['Temperature'], df['Rented Bike Count'])

# Label the axes
plt.xlabel('Temperature (Â°C)')
plt.ylabel('Rented Bike Count')

# Adding a title
plt.title('Rented Bike Count vs. Temperature')

# Show the plot
plt.show()

"""## Question 1: What happens to the rented bike count as the temperature change? <br>
(Edit this text box to add your answer in a short sentence or two. You can edit text boxes in Google Colab using the markdown language. If you need to learn markdown, Google "markdown basics.")<br>
Put your answer here:

There appears to be a positive correlation between temperature and bike rental counts, suggesting that warmer temperatures may lead to increased bike rentals.

## Task 4: Group By

Write code that groups the Seoul bike data by hour and sums the rented bike count for each hour. Use the entire dataset and do not filter rows or groupby day. Sort the data by rented bike count from highest sum of rental count to lowest rental count. Print a table that summarizes this data.

Hint: Datacamp taught you how to group by, but if you need a refresher search Google for "pandas groupby aggregate count".
"""

# put your code here
import pandas  as pd
import matplotlib.pyplot as plt

# Load the data from the specified URL
seoul_bike_data_url = 'https://raw.githubusercontent.com/sean-humpherys/randomfilestorage/main/seoulbikedata.csv'
df = pd.read_csv(seoul_bike_data_url)

# Grouping by hour and summing the rented bike count for each hour
hourly_counts = df.groupby('Hour')['Rented Bike Count'].sum().reset_index()

# Sorting the data by rented bike count in descending order
hourly_counts_sorted = hourly_counts.sort_values(by='Rented Bike Count', ascending=False)

# Print summary table
print(hourly_counts_sorted)

# the top three hours with the highest bike rentals
top_three_hours = hourly_counts_sorted.head(3)

"""## Question 2: What hours of the day have the highest bike rentals? <br>
(Edit this text box to add your answer in a short sentence or two. State the top three hours of the day that have the highest bike rentals so that officials can ensure that there are enough bikes in working condition during those times. )<br>
Enter your answer here:
The three hours with the highest bike rentals are 18, 19, and 17. During these hours, the number of rented bikes peaks at 548568, 436229, and 415556.

## Task 5: Read about How to Melt from Wide Format to Long Format
The Seoul Korea data is in a long format, e.g. each date/hour is a separate row. Sometimes our data comes in wide format (an example is provide shortly). As data engineers we have need to transform our data between long and wide format using Pandas melt and pivot methods. Long data is often prefered by machine learning tasks. Wide format is sometimes required for a statistical analysis for comparison of how data over time, e.g. how a student improves over time or how a patient loses weight from the start to end of a treatment program.

Task 5 is to just read this article on how to melt data from wide format to long format.
<https://www.kdnuggets.com/2023/03/beginner-guide-pandas-melt-function.html>

## Task 6: Load and Clean Data

Load the NBA data into a pandas dataframe using the URL provided. Inspect the data with .head and .info. Remove any empty data rows. <br>
Data Dictionary: <br>
NBA Player Name: first and last name of the player<br>
2020: count of Twitter messages for that year<br>
2021: count of Twitter messages for that year<br>
2022: count of Twitter messages for that year<br>
2023: count of Twitter messages for that year<br>
"""

# This data is fake for the purpose of learning .melt()
import pandas as pd
nba_player_twitter_count_url = 'https://raw.githubusercontent.com/sean-humpherys/randomfilestorage/main/nba_player_twitter_count_data.csv'

# put your code here

#Loading the NBA data into a Pandas DataFrame
df = pd.read_csv(nba_player_twitter_count_url)

# Show the first 5 rows of the DataFrame
print(df.head())

# Display information about the DataFrame
print(df.info())

# Remove empty data rows (rows with missing values)
df.dropna(inplace=True)

# Display the first 5 rows of the cleaned DataFrame
print(df.head())

"""## Task 7: Melt

Melt the data from wide format into long format. The long-format dataset will have the columns "NBA Player Name", "Year", "Twitter Count".
Print the dataset to showcase your successful transformation.<br>
Example: <br>
NBA Player Name  Year Twitter Count<br>
Russell Westbrook  2020  413<br>
Russell Westbrook  2021  2857<br>
Russell Westbrook  2022  1156<br>
...<br>


"""

# put your code here

# Melt the data to long format
melt_df = pd.melt(df, id_vars=['NBA Player Name'], var_name='Year', value_name='Twitter Count')

# Drop rows with missing Twitter Count
melt_df.dropna(subset=['Twitter Count'], inplace=True)

# Convert 'Year' to integer
melt_df['Year'] = melt_df['Year'].astype(int)

# Add commas after NBA Player Name and Year
melt_df['NBA Player Name'] = melt_df['NBA Player Name'] + ','
melt_df['Year'] = melt_df['Year'].astype(str) + ','

# remove ".0" from Twitter Count
melt_df['Twitter Count'] = melt_df['Twitter Count'].astype(int)

# Display the melted DataFrame with commas added and ".0" removed
print(melt_df)

"""## DONE!

Upload the url of your notebook to WTclass.

## Grading Rubric:  

Each task is worth 10%. Each question is worth 15%.
"""